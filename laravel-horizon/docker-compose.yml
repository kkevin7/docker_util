version: "3.7"

services:

  #palomar
  app:
    build: './docker/apache'
    image: palomar:latest
    # restart: always
    restart: unless-stopped
    ports:
      - "8080:80"
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    depends_on:
      - db
      - redis
    networks:
      - palomar_net

  #mysql
  db:
    # build: './mysql'
    image: mysql:latest
    restart: always
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - MYSQL_ROOT_USER=${DB_USERNAME}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql/
      - ./docker/mysql/conf/mysql_conf.cnf:/etc/mysql/conf.d/mysql_conf.cnf
    networks:
      - palomar_net
    command: ['mysqld', '--character-set-server=utf8', '--collation-server=utf8_general_ci']

  # phpmyadmin
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '9292:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - palomar_net

  #redis
  redis:
    image: redis:alpine
    # command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always
    # restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - palomar_net
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 5

# Docker Volumes
volumes:
  mysql_data: {}
  redis_data: {}

# Docker Networks
networks:
  palomar_net:
